# ... (kode lain di dalam kelas MainApp) ...

    # ===== PERBAIKAN FINAL: Logika Akurat untuk Posisi Penanda 'X' =====
    def on_map_touch(self, touch, image_widget):
        screen = self.root.get_screen('navigation')
        marker_layout = screen.ids.marker_layout

        # 1. Dapatkan posisi dan ukuran gambar yang sebenarnya ditampilkan di layar.
        #    image_widget.norm_image_size -> ukuran asli gambar (misal: 1024x1024)
        #    image_widget.size -> ukuran widget di layar (misal: 800x600)
        #    Kivy secara internal menghitung area gambar yang ditampilkan (tanpa area kosong).
        #    Kita bisa dapatkan ini dari properti `_coreimage`.
        
        # Cek jika gambar sudah dimuat
        if not image_widget.texture:
            return

        # Dapatkan posisi sentuhan relatif terhadap widget gambar
        local_x = touch.x - image_widget.x
        local_y = touch.y - image_widget.y

        # Dapatkan ukuran gambar yang sebenarnya ditampilkan
        disp_w, disp_h = image_widget.get_norm_image_size()

        # Dapatkan offset (area kosong/letterboxing)
        offset_x = (image_widget.width - disp_w) / 2.0
        offset_y = (image_widget.height - disp_h) / 2.0
        
        # 2. Periksa apakah sentuhan berada di dalam area gambar
        if not (offset_x <= local_x < offset_x + disp_w and
                offset_y <= local_y < offset_y + disp_h):
            print("INFO: Sentuhan di luar area peta.")
            return

        # 3. Tempatkan 'X' secara visual di posisi sentuhan
        marker_layout.clear_widgets()
        local_pos_for_marker = marker_layout.to_local(*touch.pos)
        marker = Label(text='X', font_size='30sp', color=(1, 0, 0, 1), bold=True)
        marker.center = local_pos_for_marker
        marker_layout.add_widget(marker)
        
        # 4. Hitung koordinat piksel yang akurat untuk ROS
        # Dapatkan posisi sentuhan di dalam gambar yang ditampilkan (tanpa offset)
        touch_on_image_x = local_x - offset_x
        touch_on_image_y = local_y - offset_y

        # Dapatkan resolusi asli gambar dari texture
        norm_w, norm_h = image_widget.texture.size
        
        # Skalakan koordinat sentuhan dari ukuran tampil ke ukuran asli
        pixel_x_for_ros = (touch_on_image_x / disp_w) * norm_w
        pixel_y_for_ros = (touch_on_image_y / disp_h) * norm_h
        
        screen.selected_pixel_coords = (pixel_x_for_ros, pixel_y_for_ros, norm_w, norm_h)
        
        # 5. Aktifkan UI
        screen.ids.navigate_button.disabled = False
        screen.ids.navigation_status_label.text = "Status: Titik dipilih. Tekan 'Lakukan Navigasi'."

# ... (sisa kode MainApp tidak berubah) ...
